{
  "project_name": "mulchcli",
  "project_purpose": "A modular, standalone CLI tool for bootstrapping and managing multi-project software environments. Designed to be reusable, extensible, and friendly to open-source users and teams.",
  "theme": "Soil preparation, planting seeds, tree growth â€” metaphors for project creation and modular configuration.",
  "repository_type": "Standalone PyPI package usable in other projects via 'poetry add mulchcli'",

  "cli_use_cases": [
    "Scaffold a new project directory under 'projects/'",
    "Initialize a TOML config with schema tailored to a specific project",
    "List existing projects and their paths",
    "Validate the structure or health of a given project folder",
    "Auto-generate folders like 'addresses/', 'configs/', 'exports/', etc.",
    "Future: project renaming, deletion, or environment switching"
  ],

  "mulchcli": {
    "package_name": "mulchcli",
    "entry_point": "mulchcli.cli:main",
    "language_version": "Python >=3.10",
    "tooling": {
      "packaging": "Poetry",
      "build_backend": "poetry-core",
      "testing_framework": "pytest",
      "script_runner": "Click"
    },
    "directory_structure": {
      "mulchcli/": {
        "__init__.py": "Package initializer",
        "cli.py": "Click-based command interface",
        "project.py": "Helper logic to generate and manage project templates",
        "config.py": "TOML-based config scaffolding/validation logic"
      },
      "tests/": {
        "test_cli.py": "Pytest unit tests for CLI commands"
      },
      "README.md": "Usage, philosophy, and examples",
      "pyproject.toml": "PEP 621 compatible, uses [project] instead of [tool.poetry]",
      "Makefile": "Automation targets for build/test/publish",
      "scripts/": {
        "install.sh": "Local install script (Linux)",
        "install.ps1": "Local install script (PowerShell)"
      }
    }
  }
}
