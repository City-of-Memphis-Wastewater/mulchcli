PS C:\Users\george.bennett\OneDrive - City of Memphis\Documents\Dev\mulchcli> poetry run pytest -v
====================================================================================================== test session starts ======================================================================================================
platform win32 -- Python 3.10.10, pytest-8.3.5, pluggy-1.5.0 -- C:\Users\george.bennett\AppData\Local\pypoetry\Cache\virtualenvs\mulchcli-_MPsBw1R-py3.10\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\george.bennett\OneDrive - City of Memphis\Documents\Dev\mulchcli
configfile: pyproject.toml
testpaths: tests
collected 9 items

tests/test_cli.py::test_version_command FAILED                                                                                                                                                                             [ 11%]
tests/test_cli.py::test_help_command PASSED                                                                                                                                                                                [ 22%]
tests/test_cli.py::test_init_creates_project FAILED                                                                                                                                                                        [ 33%]
tests/test_cli.py::test_list_projects_empty FAILED                                                                                                                                                                         [ 44%]
tests/test_cli.py::test_list_projects FAILED                                                                                                                                                                               [ 55%]
tests/test_config.py::test_set_and_get_config FAILED                                                                                                                                                                       [ 66%]
tests/test_edge_cases.py::test_double_init_is_safe FAILED                                                                                                                                                                  [ 77%]
tests/test_edge_cases.py::test_config_on_nonexistent_project FAILED                                                                                                                                                        [ 88%]
tests/test_edge_cases.py::test_nested_key_in_config FAILED                                                                                                                                                                 [100%]

=========================================================================================================== FAILURES ============================================================================================================
_____________________________________________________________________________________________________ test_version_command ______________________________________________________________________________________________________

runner = <click.testing.CliRunner object at 0x000001BB4B6EBF10>

    def test_version_command(runner):
        result = runner.invoke(main, ["--version"])
>       assert result.exit_code == 0
E       assert 2 == 0
E        +  where 2 = <Result SystemExit(2)>.exit_code

tests\test_cli.py:13: AssertionError
___________________________________________________________________________________________________ test_init_creates_project ___________________________________________________________________________________________________

tmp_path = WindowsPath('C:/Users/george.bennett/AppData/Local/Temp/pytest-of-GEORGE.BENNETT/pytest-6/test_init_creates_project0')

    def test_init_creates_project(tmp_path):
        runner = CliRunner()
        with runner.isolated_filesystem(temp_dir=tmp_path):
            result = runner.invoke(main, ["init", "testproj"])
            assert result.exit_code == 0
>           assert "testproj" in (tmp_path / "projects").iterdir().__str__()
E           AssertionError: assert 'testproj' in '<generator object Path.iterdir at 0x000001BB4B6CF760>'
E            +  where '<generator object Path.iterdir at 0x000001BB4B6CF760>' = <method-wrapper '__str__' of generator object at 0x000001BB4B6CF760>()
E            +    where <method-wrapper '__str__' of generator object at 0x000001BB4B6CF760> = <generator object Path.iterdir at 0x000001BB4B6CF760>.__str__
E            +      where <generator object Path.iterdir at 0x000001BB4B6CF760> = iterdir()
E            +        where iterdir = (WindowsPath('C:/Users/george.bennett/AppData/Local/Temp/pytest-of-GEORGE.BENNETT/pytest-6/test_init_creates_project0') / 'projects').iterdir

tests\test_cli.py:35: AssertionError
___________________________________________________________________________________________________ test_list_projects_empty ____________________________________________________________________________________________________

runner = <click.testing.CliRunner object at 0x000001BB4B76FE80>, tmp_path = WindowsPath('C:/Users/george.bennett/AppData/Local/Temp/pytest-of-GEORGE.BENNETT/pytest-6/test_list_projects_empty0')

    def test_list_projects_empty(runner, tmp_path):
        result = runner.invoke(main, ["list-projects"], obj={"root": tmp_path})
>       assert "No projects found" in result.output
E       AssertionError: assert 'No projects found' in 'No projects directory found.\n'
E        +  where 'No projects directory found.\n' = <Result okay>.output

tests\test_cli.py:28: AssertionError
______________________________________________________________________________________________________ test_list_projects _______________________________________________________________________________________________________

tmp_path = WindowsPath('C:/Users/george.bennett/AppData/Local/Temp/pytest-of-GEORGE.BENNETT/pytest-6/test_list_projects0')

    def test_list_projects(tmp_path):
        runner = CliRunner()
        (tmp_path / "projects" / "demo").mkdir(parents=True)
        with runner.isolated_filesystem(temp_dir=tmp_path):
            result = runner.invoke(main, ["list-projects"])
>           assert "demo" in result.output
E           AssertionError: assert 'demo' in 'No projects directory found.\n'
E            +  where 'No projects directory found.\n' = <Result okay>.output

tests\test_cli.py:42: AssertionError
____________________________________________________________________________________________________ test_set_and_get_config ____________________________________________________________________________________________________

tmp_path = WindowsPath('C:/Users/george.bennett/AppData/Local/Temp/pytest-of-GEORGE.BENNETT/pytest-6/test_set_and_get_config0'), runner = <click.testing.CliRunner object at 0x000001BB4B76CAF0>

    def test_set_and_get_config(tmp_path, runner):
        project = "demo"
        key = "db.port"
        value = "5432"

        # Create project directory
        project_dir = tmp_path / "projects" / project / "configs"
        project_dir.mkdir(parents=True)

        config_path = project_dir / "config.toml"

        with runner.isolated_filesystem(temp_dir=tmp_path):
            # Set config
            result = runner.invoke(main, ["config", "set", key, value, "--project", project])
>           assert result.exit_code == 0
E           assert 2 == 0
E            +  where 2 = <Result SystemExit(2)>.exit_code

tests\test_config.py:27: AssertionError
___________________________________________________________________________________________________ test_double_init_is_safe ____________________________________________________________________________________________________

isolated = ('C:\\Users\\george.bennett\\AppData\\Local\\Temp\\pytest-of-GEORGE.BENNETT\\pytest-6\\test_double_init_is_safe0\\tmpc... WindowsPath('C:/Users/george.bennett/AppData/Local/Temp/pytest-of-GEORGE.BENNETT/pytest-6/test_double_init_is_safe0'))

    def test_double_init_is_safe(isolated):
        runner = CliRunner()
        _, tmp_path = isolated
        with runner.isolated_filesystem(temp_dir=tmp_path):
            result1 = runner.invoke(main, ["init", "proj1"])
            result2 = runner.invoke(main, ["init", "proj1"])

            assert result1.exit_code == 0
>           assert "created" in result1.output.lower()
E           AssertionError: assert 'created' in '[?] initialized project: proj1\n'
E            +  where '[?] initialized project: proj1\n' = <built-in method lower of str object at 0x000001BB4B76BC80>()
E            +    where <built-in method lower of str object at 0x000001BB4B76BC80> = '[?] Initialized project: proj1\n'.lower
E            +      where '[?] Initialized project: proj1\n' = <Result okay>.output

C:\Users\george.bennett\OneDrive - City of Memphis\Documents\Dev\mulchcli\tests\test_edge_cases.py:26: AssertionError
______________________________________________________________________________________________ test_config_on_nonexistent_project _______________________________________________________________________________________________

isolated = ('C:\\Users\\george.bennett\\AppData\\Local\\Temp\\pytest-of-GEORGE.BENNETT\\pytest-6\\test_config_on_nonexistent_pro0...wsPath('C:/Users/george.bennett/AppData/Local/Temp/pytest-of-GEORGE.BENNETT/pytest-6/test_config_on_nonexistent_pro0'))

    def test_config_on_nonexistent_project(isolated):
        runner = CliRunner()
        _, tmp_path = isolated
        with runner.isolated_filesystem(temp_dir=tmp_path):
            result = runner.invoke(main, [
                "config", "set", "app.mode", "production", "--project", "ghost"
            ])
>           assert "not exist" in result.output.lower() or "config not found" in result.output.lower()
E           assert ('not exist' in "usage: main config [options] project_name key value\ntry 'main config --help' for help.\n\nerror: no such option: --project\n" or 'config not found' in "usage: main config [options] project_name key value\ntry 'main config --help' for help.\n\nerror: no such option: --project\n")
E            +  where "usage: main config [options] project_name key value\ntry 'main config --help' for help.\n\nerror: no such option: --project\n" = <built-in method lower of str object at 0x000001BB4B7AD840>()
E            +    where <built-in method lower of str object at 0x000001BB4B7AD840> = "Usage: main config [OPTIONS] PROJECT_NAME KEY VALUE\nTry 'main config --help' for help.\n\nError: No such option: --project\n".lower
E            +      where "Usage: main config [OPTIONS] PROJECT_NAME KEY VALUE\nTry 'main config --help' for help.\n\nError: No such option: --project\n" = <Result SystemExit(2)>.output
E            +  and   "usage: main config [options] project_name key value\ntry 'main config --help' for help.\n\nerror: no such option: --project\n" = <built-in method lower of str object at 0x000001BB4B7ADA50>()
E            +    where <built-in method lower of str object at 0x000001BB4B7ADA50> = "Usage: main config [OPTIONS] PROJECT_NAME KEY VALUE\nTry 'main config --help' for help.\n\nError: No such option: --project\n".lower
E            +      where "Usage: main config [OPTIONS] PROJECT_NAME KEY VALUE\nTry 'main config --help' for help.\n\nError: No such option: --project\n" = <Result SystemExit(2)>.output

C:\Users\george.bennett\OneDrive - City of Memphis\Documents\Dev\mulchcli\tests\test_edge_cases.py:39: AssertionError
___________________________________________________________________________________________________ test_nested_key_in_config ___________________________________________________________________________________________________

isolated = ('C:\\Users\\george.bennett\\AppData\\Local\\Temp\\pytest-of-GEORGE.BENNETT\\pytest-6\\test_nested_key_in_config0\\tmp...WindowsPath('C:/Users/george.bennett/AppData/Local/Temp/pytest-of-GEORGE.BENNETT/pytest-6/test_nested_key_in_config0'))

    def test_nested_key_in_config(isolated):
>       import tomllib
E       ModuleNotFoundError: No module named 'tomllib'

C:\Users\george.bennett\OneDrive - City of Memphis\Documents\Dev\mulchcli\tests\test_edge_cases.py:43: ModuleNotFoundError
==================================================================================================== short test summary info ====================================================================================================
FAILED tests/test_cli.py::test_version_command - assert 2 == 0
FAILED tests/test_cli.py::test_init_creates_project - AssertionError: assert 'testproj' in '<generator object Path.iterdir at 0x000001BB4B6CF760>'
FAILED tests/test_cli.py::test_list_projects_empty - AssertionError: assert 'No projects found' in 'No projects directory found.\n'
FAILED tests/test_cli.py::test_list_projects - AssertionError: assert 'demo' in 'No projects directory found.\n'
FAILED tests/test_config.py::test_set_and_get_config - assert 2 == 0
FAILED tests/test_edge_cases.py::test_double_init_is_safe - AssertionError: assert 'created' in '[?] initialized project: proj1\n'
FAILED tests/test_edge_cases.py::test_config_on_nonexistent_project - assert ('not exist' in "usage: main config [options] project_name key value\ntry 'main config --help' for help.\n\nerror: no such option: --project\n" or 'config not found' in "usage: main config [options] project_name ke...
FAILED tests/test_edge_cases.py::test_nested_key_in_config - ModuleNotFoundError: No module named 'tomllib'
================================================================================================== 8 failed, 1 passed in 0.19s ==================================================================================================
PS C:\Users\george.bennett\OneDrive - City of Memphis\Documents\Dev\mulchcli>